type Query
type Mutation

extend type Query {
    reservations (orderBy: [OrderByClause!] @orderBy): [Reservation!]! @paginate
    reservation (id: Int! @eq): Reservation @find
}

type Reservation {
    id: ID!
    user: User! @belongsTo
    car: Car! @belongsTo
    date_from: DateTime!
    date_to: DateTime!
    price: Float!
    created_at: DateTime
    updated_at: DateTime
}

extend type Mutation {
    createReservation(
        user_id: ID! @rules(apply: ["required", "numeric", "exists:users,id"])
        car_id: ID! @rules(apply: ["required", "numeric", "exists:cars,id"])
        date_from: DateTime! @rules(apply: ["required", "date"])
        date_to: DateTime! @rules(apply: ["required", "date", "after:date_from"])
    ): Reservation! @create
}